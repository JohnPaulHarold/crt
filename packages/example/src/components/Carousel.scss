@use '../styles/colours' as col;
@use '../styles/funcs' as fn;

.carouselWrapper {
	position: relative; // This is the positioning context for the arrows
	overflow: hidden; // This clips the inner scrollable area

	.scrollAndArrowWrapper {
		position: relative; // Positioning context for arrows
	}

	&.horizontal {
		> .scrollAndArrowWrapper {
			> .carousel {
				white-space: nowrap; // Prevent inline-block items from wrapping
			}

			> .arrow {
				top: 50%;
				transform: translateY(-50%);
				height: 100%;

				&.arrow.prev {
					left: 0;
					border-radius: 0 fn.px-to-rem(8) fn.px-to-rem(8) 0;
				}

				&.arrow.next {
					right: 0;
					border-radius: fn.px-to-rem(8) 0 0 fn.px-to-rem(8);
				}
			}
		}
	}

	&.vertical {
		// Use flexbox for the main vertical layout to correctly size the
		// header and the scrollable content area.
		display: flex;
		flex-direction: column;

		> .heading {
			flex-shrink: 0; // Prevent the heading from shrinking
		}

		> .scrollAndArrowWrapper {
			flex-grow: 1; // Allow the scroll area to fill the remaining space
			min-height: 0; // A flexbox hack to allow the inner carousel to scroll correctly

			> .carousel {
				white-space: normal; // Allow items to stack
			}

			> .carousel > * {
				display: block; // Stack items vertically
			}

			> .arrow {
				// Reposition for vertical layout
				left: 50%;
				transform: translateX(-50%);
				width: 40%; // Don't take full width
				height: fn.px-to-rem(80);

				&.arrow.prev {
					top: 0;
					border-radius: fn.px-to-rem(8);
				}

				&.arrow.next {
					bottom: 0;
					top: auto;
					border-radius: fn.px-to-rem(8);
				}
			}
		}
	}
}

.heading {
	// Add styles for the optional heading here
	// TODO: all styles should be using px-to-rem

	margin-bottom: fn.px-to-rem(24);
	font-size: fn.px-to-rem(62);
	color: #eee;
}

.carousel {
	position: relative;
	transition: all 0.3s ease-in-out;
	// This is a classic technique to remove whitespace between inline-block elements
	font-size: 0;
	height: 100%; // Ensure the scroll area fills its wrapper
}

.carousel > * {
	display: inline-block;
	vertical-align: top; // Align items to the top
	font-size: fn.px-to-rem(24); // Reset font-size for the content
	white-space: normal; // Allow text inside items to wrap
}

.arrow {
	position: absolute;
	z-index: 10;
	background-color: rgba(0, 0, 0, 0.5);
	border: none;
	color: white;
	font-size: fn.px-to-rem(48);
	width: fn.px-to-rem(80); // Default width for horizontal arrows
	cursor: pointer;

	&:hover {
		background-color: rgba(0, 0, 0, 0.8);
	}
}
